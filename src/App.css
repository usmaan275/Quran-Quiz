/* App.css */

html,
body {
  height: 80%;
  margin: 0;
  padding: 0;
  background: black;
  background-attachment: fixed; /* optional */
  background-repeat: no-repeat;
  background-size: cover;
}

.App {
  text-align: center;
  /* Remove overflow hidden here if you want the page to scroll as needed */
}

.App-header {
  transition: 0.3s;
  background: linear-gradient(175deg, #2e004f, #5c007a);
  box-shadow: inset 0 0 calc(var(--vh) * 2) #000000, inset 0 0 calc(var(--vh) * 2) #000000;
  min-height: calc(var(--vh) * 99.99);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: calc(var(--vh) * 4) calc(var(--vh) * 2); /* Add padding to avoid overlap */
  font-size: 3vmin;
  color: white;
  box-sizing: border-box; /* Ensures padding doesnâ€™t add extra width */
}

.quba {
  width: 12vmax; /* Adjust the width as a percentage of the viewport width */
  height: 12vmax; /* Ensures the element remains a square */
  margin: calc(var(--vh) * 2) auto;
  display: block;
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
  opacity: 0; /* Initially hidden */
}

/* Class to apply when the image is loaded */
.quba.loaded {
  opacity: 1;
}

/* Optional: Placeholder style */
.quba-placeholder {
  width: 12vmax; /* Adjust the width as a percentage of the viewport width */
  height: 12vmax; /* Ensures the element remains a square */
  margin: calc(var(--vh) * 2) auto;
  background-color: #f0f0f0; /* Light gray placeholder */
}


/* Responsive Card Container */
.card-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: calc(var(--vh) * 2);
  width: 90%; /* Adjust to avoid overflow */
  margin: calc(var(--vh) * 2) auto;
  max-width: 100%;
  padding: 0 calc(var(--vh) * 1); /* Padding on sides to keep cards centered */
  box-sizing: border-box;
}

/* Card Styling */
.card {
  display: flex;
  align-items: center;
  justify-content: center;
  background: linear-gradient(175deg, #003d73, #3a5fcd); /* Gradient background */
  color: white;
  text-decoration: none;
  border-radius: 1vmax;
  padding: calc(var(--vh) * 2);
  font-size: 3vmin; /* Responsive font size */
  height: calc(var(--vh) * 15);
  transition: background-color 0.3s ease, transform 0.3s ease;
  border: calc(var(--vh) * 0.4) solid rgba(255, 255, 255, 0.8); /* White outline with slight transparency */
}

.card:hover {
  background-color: #4DB8E0;
  transform: scale(1.02); /* Slight scale effect on hover */
}

/* Back button styling */
.Back-button {
  position: absolute;
  top: calc(var(--vh) * 2);
  left: 1vmax;
  padding: 1vmin 1.5vmin;
  background-color: #b22222;
  color: white;
  border: 0.3vmin solid rgba(255, 255, 255, 0.6); /* White outline with slight transparency */
  border-radius: 0.5vmax;
  text-decoration: none;
  font-size: 1vmax; /* Responsive font size */
  cursor: pointer;
}

.Back-button:hover {
  background-color: #ff4500; /* Hover effect */
}

/* Timer Display */
.timer-display {
  position: absolute;  /* Keeps the timer at the top of the page */
  width: 6vmax;
  top: calc(var(--vh) * 2);  /* 2% from the top of the viewport */
  right: 1vmax;  /* 2% from the left of the viewport */
  font-size: 1.2vmax;  /* Responsive font size based on viewport width */
  font-weight: bold;
  color: #157218;  /* Green color */
  background-color: rgba(255, 255, 255, 0.7);  /* Semi-transparent background */
  padding: 1vmin 2vmin;  /* Padding based on viewport height and width */
  border-radius: 0.3vmax;  /* Rounded corners */
  box-shadow: 0 0.2vmin 0.8vmin rgba(0, 0, 0, 0.2);  /* Subtle shadow effect */
}

/* Question Tracker */
.question-tracker {
  position: fixed;  /* Fixed positioning to keep it in place */
  top: calc(var(--vh) * 2);  /* 5% from the bottom of the viewport */
  font-size: 1.5vmax;  /* Responsive font size based on viewport width */
  font-weight: bold;
  color: #0d5fa2;  /* Blue color */
  background-color: rgba(255, 255, 255, 0.7);  /* Semi-transparent background */
  padding: 1.2vmin 2vmin;  /* Padding based on viewport height and width */
  border-radius: 10px;  /* Rounded corners */
  box-shadow: 0 0.2vmin 0.8vmin rgba(0, 0, 0, 0.2);  /* Subtle shadow effect */
}

/* Floating Instructions Button */
.instructions-button {
  position: fixed;
  top: calc(var(--vh) * 2);
  right: 1vmax;
  padding: 1vmin 1.5vmin;
  width: 9vmax;
  background: linear-gradient(175deg, #004c78, #4d90cc); /* Blue gradient */
  color: white;
  border: 0.3vmin solid rgba(255, 255, 255, 0.6);
  border-radius: 0.5vmax;  color: white;
  cursor: pointer;
  overflow: hidden;
  text-decoration: none;
  font-size: 1vmax; /* Responsive font size */
}

.instructions-button:hover {
  background: #002f4b;
}

/* Dimmed Overlay */
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: calc(var(--vh) * 100);
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
}

/* Scrollable Popup */
.popup {
  background: linear-gradient(175deg, #2e004f, #5c007a);
  padding: calc(var(--vh) * 4) 3vw;
  border-radius: 1vmax;
  width: 50vw;
  max-height: calc(var(--vh) * 70);
  overflow-y: auto;
  text-align: center;
  box-shadow: 0 1vmin 1vmin rgba(0, 0, 0, 0.2);
  z-index: 100;
}

.popup-close-button {
  position: absolute;
  top: calc(var(--vh) * 2);
  right: 1vmax;
  background: red; /* Keep the red color */
  color: white;
  border: 0.3vmin solid rgba(255, 255, 255, 0.6);
  border-radius: 0.5vmax;  color: white;
  padding: 1vmin 1.5vmin;
  cursor: pointer;
  font-size: 1vmax;
  width: 9vmax;
  z-index: 10000;
}

.popup-close-button:hover {
  background: rgb(112, 4, 4); /* Darker red on hover */
}

/* Start button styling */
.Start-button {
  position: fixed;             /* Fix position to viewport bottom */
  bottom: calc(var(--vh) * 2);
  left: 50%;                   /* Center horizontally */
  transform: translateX(-50%); /* Perfect centering */
  padding: 1vmax 3vmax;
  background: linear-gradient(175deg, #0b3d25, #1f6d43); /* Green gradient */
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.8); /* White outline with slight transparency */
  border-radius: 3vmax;
  text-decoration: none;
  font-size: 1.2vmax; /* Responsive font size */
  cursor: pointer;
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
}

.Start-button:hover {
  background: linear-gradient(175deg, #1f6d43, #2c905b); /* Green gradient */
}

.Start-button:disabled {
  opacity: 0.4; /* Set to 40% opacity when disabled */
  cursor: not-allowed; /* Change cursor to indicate it's not clickable */
}

/* Container for the selection buttons
.selection-container {
  display: flex;
  justify-content: center;
  margin-top: 20px;
  margin-bottom: 20px;
} */

/* Toggle buttons for selection */
.toggle-button {
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
  font-size: 1vmax;
  display: flex; /* Make the button a flex container */
  justify-content: center; /* Center the text horizontally */
  align-items: center; /* Center the text vertically */
  background: linear-gradient(175deg, #004c78, #4d90cc); /* Blue gradient */
  color: white;
  border: 0.3vmin solid rgba(255, 255, 255, 0.6);
  border-radius: 3vmax;
  width: 35vw;
  height: 7vmin;
  flex: 1; /* Make buttons equal length */
  margin: 0 0.4vmin;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.2s;
  min-width: 90px; /* Set a minimum width for buttons */
}

.toggle-button:hover {
  transform: scale(1.05);
}

/* Container specifically for Select All and Deselect All buttons */
.toggle-buttons-container {
  display: flex; /* Arrange buttons side by side */
  justify-content: center;
  gap: 1vmax; /* Space between buttons */
  margin-bottom: 2vmin;
}

/* Content area for selected option display */
.selection-content {
  flex: 1; /* Fill the space above the Start button */
  max-height: calc(var(--vh) * 60); /* Limit height to 60% of the viewport height */
  overflow-y: auto; /* Allow vertical scrolling */
  width: 80vw;
  margin-top: 6vmin;
  margin-bottom: 2vmin;
  padding: 2.5vmin;
  border-radius: 1vmax;
  background-color: rgba(255, 255, 255, 0.1); /* Transparent background for effect */
  display: flex; /* Make it a flex container */
  flex-direction: column; /* Stack items vertically */
  align-items: center; /* Stretch items to fill the width */
}

.select-message {
  position: fixed;  /* Fixed positioning to keep it in place */
  top: calc(var(--vh) * 5);  /* 5% from the bottom of the viewport */
  font-size: 1.5vmax;  /* Responsive font size based on viewport width */
  font-weight: bold;
  color: #0d5fa2;  /* Blue color */
  background-color: rgba(255, 255, 255, 0.7);  /* Semi-transparent background */
  padding: 1.2vmin 2vmin;  /* Padding based on viewport height and width */
  border-radius: 10px;  /* Rounded corners */
  box-shadow: 0 0.2vmin 0.8vmin rgba(0, 0, 0, 0.2);  /* Subtle shadow effect */
}

.juzz-label {
  display: flex; /* Use flexbox for alignment */
  justify-content: space-between; /* Space between text and checkbox */
  align-items: center; /* Center items vertically */
  width: 74vw; /* Reduce width to leave space for left/right margins */
  height: 8vmin; /* Fixed height for each card */
  padding: 1vmax; /* Inner padding */
  border: 0.12vmax solid rgba(255, 255, 255, 0.6); /* Card border */
  border-radius: 0.5vmax; /* Rounded corners */
  background-color: rgba(255, 255, 255, 0.2); /* Card background color */
  transition: background-color 0.3s; /* Smooth background change */
  margin-top: 0.7vmin;
}

.juzz-label:hover {
  background-color: rgba(255, 255, 255, 0.3); /* Change background on hover */
}

/* Checkbox style (optional) */
.juzz-label input[type="checkbox"] {
  margin-left: auto; /* Push the checkbox to the right */
}

/* Loading spinner styles */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loading-spinner {
  position: absolute; /* Change to absolute positioning */
  top: 50%;           /* Vertically center within the container */
  left: 50%;          /* Horizontally center within the container */
  transform: translate(-50%, -50%); /* Adjust to ensure the spinner is centered exactly at that position */
  border: 0.5vmin solid rgba(255, 255, 255, 0.5); /* Light gray color */
  border-top: 0.5vmin solid #333; /* Darker gray color for top border */
  border-radius: 50%;
  width: 5vmin;
  height: 5vmin;
  animation: spin 1s linear infinite;
  margin: auto;
}

@font-face {
  font-family: "Scheherazade New";
  src: url("./ScheherazadeNew.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
}

/* Container for the Arabic Passage */
.passage-container {
  position: fixed;  /* Fix to the right side of the screen */
  right: 0;         /* Align to the right side */
  top: calc(var(--vh) * 10);        /* Add sufficient margin from the top */
  bottom: calc(var(--vh) * 10);     /* Add sufficient margin from the bottom */
  width: 50vw;      /* Take up half of the screen's width */
  background-color: rgba(255, 255, 255, 0.1); /* Semi-transparent white background */
  color: white;     /* Text color */
  padding: 2vmax;    /* Add padding for spacing */
  box-sizing: border-box; /* Ensure padding doesnâ€™t affect width */
  overflow-y: auto; /* Allow vertical scrolling if text is long */
  border-radius: 1vmax; /* Optional: rounded corners for a softer look */
  z-index: 10;      /* Make sure it's above other content */
  font-family: "Scheherazade New"; /* Use Arabic-friendly font */
  direction: rtl;   /* Right-to-left direction for Arabic text */
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* Align content from the top */
}

.hangman-passage-container {
  position: fixed;  /* Fix to the right side of the screen */
  right: 0;         /* Align to the right side */
  top: calc(var(--vh) * 10);        /* Add sufficient margin from the top */
  bottom: calc(var(--vh) * 10);     /* Add sufficient margin from the bottom */
  width: 50vw;      /* Take up half of the screen's width */
  background: url('./desert.jpg') no-repeat center center;
  background-size: cover;
  animation: fadeIn 0.8s ease-in forwards;
  color: white;     /* Text color */
  padding: 2vmax;    /* Add padding for spacing */
  box-sizing: border-box; /* Ensure padding doesnâ€™t affect width */
  overflow-y: auto; /* Allow vertical scrolling if text is long */
  border-radius: 1vmax; /* Optional: rounded corners for a softer look */
  z-index: 10;      /* Make sure it's above other content */
  font-family: "Scheherazade New"; /* Use Arabic-friendly font */
  direction: rtl;   /* Right-to-left direction for Arabic text */
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* Align content from the top */
}

.english-passage-container {
  position: fixed;  /* Fix to the right side of the screen */
  right: 0;         /* Align to the right side */
  top: calc(var(--vh) * 10);        /* Add sufficient margin from the top */
  bottom: calc(var(--vh) * 10);     /* Add sufficient margin from the bottom */
  width: 50vw;      /* Take up half of the screen's width */
  background-color: rgba(255, 255, 255, 0.1); /* Semi-transparent white background */
  color: white;     /* Text color */
  padding: 2vmax;    /* Add padding for spacing */
  box-sizing: border-box; /* Ensure padding doesnâ€™t affect width */
  overflow-y: auto; /* Allow vertical scrolling if text is long */
  border-radius: 1vmax; /* Optional: rounded corners for a softer look */
  z-index: 10;      /* Make sure it's above other content */
  font-family: "Scheherazade New"; /* Use Arabic-friendly font */
  direction: ltr;   /* Right-to-left direction for Arabic text */
  display: flex;
  flex-direction: column;
  justify-content: flex-start; /* Align content from the top */
}

/* For the passage text (inside the container) */
.passage-text {
  white-space: pre-line; /* Ensure the line breaks in the passage are respected */
  font-size: 1.1em; /* Adjust font size */
  line-height: 2.4; /* Adjust line height for readability */
  overflow-wrap: break-word; /* Ensure words break nicely within the container */
  z-index: inherit;
}

.type-container {
  display: flex;           /* Use Flexbox for centering */
  bottom: calc(var(--vh) * 10);     /* Add sufficient margin from the bottom */
  margin-top:calc(var(--vh) * 10);
  flex-direction: column;    /* Stack children vertically */
  justify-content: center;   /* Center vertically */
  align-items: center;       /* Center horizontally */
  width: 50vw;               /* Take up the left half of the screen */
  position: fixed;           /* Keep it fixed on the screen */
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.3); /* Slightly transparent dark background */
  border-radius: 1vmax;
  box-sizing: border-box;
}

.search-container {
  position: fixed;         /* Use fixed positioning to place it relative to the viewport */
  size: fixed;
  top: calc(var(--vh) * 10);               /* calc(var(--vh) * 10) distance from the top of the screen */
  width: 45%;              /* Make the container occupy the right half of the screen */
  height: calc(var(--vh) * 6.5);
  padding: calc(var(--vh) * 1.7);
  padding-top: calc(var(--vh) * 1.7);
  font-family: "Scheherazade New";
  direction: rtl;          /* Right to left for Arabic input */
  z-index: 100;            /* Ensure it's on top of other content */
}

.english-search-container {
  position: fixed;         /* Use fixed positioning to place it relative to the viewport */
  size: fixed;
  top: calc(var(--vh) * 10);               /* calc(var(--vh) * 10) distance from the top of the screen */
  width: 45%;              /* Make the container occupy the right half of the screen */
  height: calc(var(--vh) * 6.5);
  padding: calc(var(--vh) * 1.7);
  padding-top: calc(var(--vh) * 1.7);
  font-family: "Scheherazade New";
  direction: auto;          
  z-index: 100;            /* Ensure it's on top of other content */
}

button.clear-button {
  position: absolute;
  left: 1.5vw; /* Position the button on the left side for RTL layout */
  top: calc(var(--vh) * 5.8); /* Vertically center the button */
  width: calc(var(--vh) * 4);
  height: calc(var(--vh) * 4);
  transform: translateY(-50%); /* Adjust to make it truly centered */
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

button.english-clear-button {
  position: absolute;
  right: 1.5vw; /* Position the button on the left side for RTL layout */
  top: calc(var(--vh) * 5); /* Vertically center the button */
  width: calc(var(--vh) * 4);
  height: calc(var(--vh) * 4);
  transform: translateY(-50%); /* Adjust to make it truly centered */
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

button.clear-button svg {
  fill: #888; /* Change the color of the close icon */
}

button.english-clear-button svg {
  fill: #888; /* Change the color of the close icon */
}

button.clear-button:hover svg {
  fill: #555; /* Darker color on hover */
}

button.english-clear-button:hover svg {
  fill: #555; /* Darker color on hover */
}

.search-container input {
  width: 100%;
  height: calc(var(--vh) * 8);
  padding-right: 1vw;
  padding-left: 5vw;
  font-size: 0.7em;
  border: 0.2vmin solid #ccc;
  font-family: "Scheherazade New";
  border-radius: 0.5vmax;
  outline: none;
  background-color: #f9f9f9;
  box-sizing: border-box;
}

.english-search-container input {
  width: 100%;
  height: calc(var(--vh) * 8);
  padding-left: 5vw;
  padding-right: 5vw;
  font-size: 0.7em;
  border: 0.2vmin solid #ccc;
  font-family: "Scheherazade New";
  border-radius: 0.5vmax;
  outline: none;
  background-color: #f9f9f9;
  box-sizing: border-box;
  text-align: center;
  direction: ltr;          
  unicode-bidi: plaintext;
}

.search-container input::placeholder {
  font-family: "Scheherazade New"; /* Use Arabic-friendly font */
}

.english-search-container input::placeholder {
  font-family: "Scheherazade New"; /* Use Arabic-friendly font */
}

.search-container input:focus {
  border-color: #007bff;   /* Highlight border on focus */
  font-family: "Scheherazade New";
  background-color: #ffffff;
}

.english-search-container input:focus {
  border-color: #007bff;   /* Highlight border on focus */
  font-family: "Scheherazade New";
  background-color: #ffffff;
}

/* Mic Button Styling */
.mic-button {
  position: absolute;
  left: 2.2vw; /* Position the button on the left side for RTL layout */
  top: calc(var(--vh) * 3.2); /* Vertically center the button */
  width: calc(var(--vh) * 5.5);
  height: calc(var(--vh) * 5.5);
  background: transparent;
  border: none;
  cursor: pointer;
  transition: transform 0.2s ease-in-out;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 1vw;
}

.mic-button .mic-icon {
  fill: #888; /* Default gray */
  transition: fill 0.3s ease-in-out;
}

/* Change color when active */
.mic-button.active .mic-icon {
  fill: #007bff; /* Blue when activated */
}

.mic-button .mic-icon:hover {
  fill: #555; /* Darker color on hover */
}

.english-mic-button {
  position: absolute;
  right: 3.2vw; /* Position the button on the left side for RTL layout */
  top: calc(var(--vh) * 2.2); /* Vertically center the button */
  width: calc(var(--vh) * 5.5);
  height: calc(var(--vh) * 5.5);
  background: transparent;
  border: none;
  cursor: pointer;
  transition: transform 0.2s ease-in-out;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 1vw;
}

.english-mic-button .mic-icon {
  fill: #888; /* Default gray */
  transition: fill 0.3s ease-in-out;
}

/* Change color when active */
.english-mic-button.active .mic-icon {
  fill: #007bff; /* Blue when activated */
}

.english-mic-button .mic-icon:hover {
  fill: #555; /* Darker color on hover */
}

.suggestions-list {
  list-style-type: none;
  font-family: "Scheherazade New";
  margin: 0;
  margin-top: calc(var(--vh) * 0.3);
  padding: 0;
  position: absolute;
  width: 100%;
  max-height: calc(var(--vh) * 30);
  overflow-y: auto;
  top: 100%;
  left: 0;
  background-color: #fff;
  border: 0.2vmin solid #ddd;
  border-radius: 0.5vmax;
  box-shadow: 0 0.2vmax 0.4vmax rgba(0, 0, 0, 0.1);
  z-index: 100;
}

.mobile-suggestions-list {
  visibility: hidden;
}

.suggestions-list li {
  padding: calc(var(--vh) * 1.4);
  border-bottom: 0.3vmin solid #f0f0f0;
  font-family: "Scheherazade New";
  cursor: pointer;
  transition: background-color 0.3s ease;
  font-size: 0.7em;
  line-height: 1.5;
  color: #333;
}

.suggestions-list li:last-child {
  border-bottom: none;
  font-family: "Scheherazade New";
}

.suggestions-list li:hover {
  background-color: #f0f0f0;
  font-family: "Scheherazade New";
}

.suggestions-list li p {
  margin: 0;
  font-family: "Scheherazade New";
}

.suggestions-list.hidden {
  display: none;
  font-family: "Scheherazade New";
}

.no-results {
  text-align: center;
  color: #999;
  padding: calc(var(--vh) * 1.4) 0;
  font-style: italic;
  font-family: "Scheherazade New";
}

.visually-hidden {
  position: absolute;
  font-family: "Scheherazade New";
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

/* Container for all rows, positioned at the bottom of the screen */
.keyboard-container {
  display: flex;
  direction: rtl;
  font-family: "Scheherazade New";
  flex-direction: column; /* Stack rows vertically */
  position: fixed;
  bottom: calc(var(--vh) * 10);
  width: 50vw; /* Full width of the screen */
  padding-top: calc(var(--vh) * 1.8);
  padding-right: 0px;
  background-color: rgba(0, 0, 0, 0.3); /* Slightly transparent dark background */
  border-radius: 1vmax;
}

.keyboard-container.hidden {
  display: none;
}

.hangman-keyboard-container {
  display: flex;
  direction: rtl;
  font-family: "Scheherazade New";
  flex-direction: column; /* Stack rows vertically */
  position: fixed;
  bottom: calc(var(--vh) * 10);
  width: 50vw; /* Full width of the screen */
  left: 50%; /* Center horizontally */
  transform: translateX(-50%); /* Offset half the width */
  padding-top: calc(var(--vh) * 1.8);
  padding-right: 0px;
  background-color: rgba(0, 0, 0, 0.3); /* Slightly transparent dark background */
  border-radius: 1vmax;
}

.toggle-keyboard-btn {
  margin: calc(var(--vh) * 1);
  padding: calc(var(--vh) * 1) calc(var(--vh) * 2);
  font-size: 0.5em;
  background-color: #333;
  color: white;
  border: none;
  border-radius: 1vmax;
  cursor: pointer;
  position: fixed;
  left: 1vw;
  bottom: calc(var(--vh) * 5);
}

.english-keyboard-container {
  display: flex;
  direction: ltr;
  font-family: "Scheherazade New";
  flex-direction: column; /* Stack rows vertically */
  position: fixed;
  bottom: calc(var(--vh) * 10);
  width: 50vw; /* Full width of the screen */
  padding-top: calc(var(--vh) * 1.8);
  padding-right: 0px;
  background-color: rgba(0, 0, 0, 0.3); /* Slightly transparent dark background */
  border-radius: 1vmax;
}

.english-keyboard-container.hidden {
  display: none;
}

/* Each row of keys */
.keyboard-row {
  display: flex;
  justify-content: center; /* Center align keys within each row */
  gap: 0.6vw; /* Space between keys in the row */
  margin-bottom: calc(var(--vh) * 1.2); /* Space between rows */
}

/* Key Styling */
.key {
  position: relative;
  display: flex;
  align-items: center;
  font-family: "Scheherazade New";
  justify-content: center;
  background: linear-gradient(175deg, #003d73, #3a5fcd); /* Gradient background */
  color: white;
  text-decoration: none;
  border-radius: 0.8vmax;
  padding: calc(var(--vh) * 1.2);
  font-size: 0.9em; /* Responsive font size */
  height: calc(var(--vh) * 6); /* Suitable height for keyboard key */
  transition: background-color 0.3s ease, transform 0.3s ease;
  border: 0.15vmax solid rgba(255, 255, 255, 0.6); /* White outline with slight transparency */
  flex: 1; /* Let keys expand evenly within each row */
  max-width: 3.5vw; /* Limit the maximum width of each key */
}

.key.h {
  font-size: 1.4vmax;
}

.key::after {
  content: attr(data-translit);
  position: absolute;
  top: calc(var(--vh) * 0);
  left: 0.42vw;
  font-size: 0.5em;
  direction: ltr;
  color: rgba(255, 255, 255, 0.7);
  pointer-events: none;
}

/* Hover effect for keys */
.key:hover {
  background-color: #4DB8E0;
  transform: scale(0.90); /* Slight scale effect on hover */
}

.key:active {
  transform: scale(0.85);  /* Slightly shrink the key when clicked */
  background-color: #032e54;  /* A darker color on click */
}

/* Override styles for space key */
.key.space {
  max-width: 10vw;
}

/* Override styles for backspace key */
.key.backspace {
  background: linear-gradient(175deg, #b22222, #e53935); /* Red gradient for backspace */
}

.notification-container {
  position: fixed;
  top: calc(var(--vh) * 3);
  padding: calc(var(--vh) * 1) 2vw;
  width: 50vw;
  height: calc(var(--vh) * 3);
  background-color: rgba(0, 0, 0, 0.7);
  color: #fff;
  border-radius: 0.7vmax;
  font-size: 2.2vmin;
  box-shadow: 0px 0.2vmin 0.3vmin rgba(0, 0, 0, 0.1);
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-items: center;
}

.notification-text {
  display: flex;           /* Enable Flexbox */
  justify-content: center; /* Center horizontally */
  align-items: center;     /* Center vertically */
}

.close-button {
  right: 1vw;
  border: none;
  position: absolute;
  border-radius: 0.7vmax;           /* Round corners */
  font-size: 3vmin;
  cursor: pointer;
  display: flex;
  align-items: right;
  justify-content: right;
  transition: background-color 0.3s ease;
}

.close-button:hover {
  background-color: #e53935;  /* Darker red when hovered */
}

.close-button:focus {
  outline: none;  /* Remove focus outline when clicked */
}

.close-button svg {
  width: 3vmin;       /* Adjust size of the close icon */
  height: 3vmin;
  transition: fill 0.3s ease;
}

.close-button:hover svg {
  fill: #fff;        /* White icon color on hover */
}

.next-button {
  position: fixed;
  bottom: calc(var(--vh) * 2);
  left: 50%;                   /* Center horizontally */
  transform: translateX(-50%); /* Perfect centering */
  padding: calc(var(--vh) * 1.8) 2.6vw;
  background: linear-gradient(175deg, #0b3d25, #1f6d43); /* Green gradient */
  color: white;
  border: 0.2vmax solid rgba(255, 255, 255, 0.9); /* White outline with slight transparency */
  border-radius: 3vmax;
  text-decoration: none;
  font-size: 1.2vmax; /* Responsive font size */
  cursor: pointer;
}

.next-button:hover {
  background: linear-gradient(175deg, #1f6d43, #2c905b); /* Green gradient */
}

.score-wrapper {
  padding: calc(var(--vh) * 5) 5vw;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2vw;
  backdrop-filter: blur(10px);
}

.score-display {
  font-size: 8vmin; /* Responsive size */
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.2vw;
  padding: calc(var(--vh) * 0) 5vw;
  border-radius: 2vw;
  transition: transform 0.3s ease-in-out;
  animation: popIn 0.5s ease-out;
}

/* Color transitions based on score */
.low-score {
  color: #ff4c4c;
  text-shadow: 0 0 1vw rgba(255, 76, 76, 0.6);
}

.medium-score {
  color: #ffa500;
  text-shadow: 0 0 1vw rgba(255, 165, 0, 0.6);
}

.high-score {
  color: #4caf50;
  text-shadow: 0 0 1vw rgba(76, 175, 80, 0.6);
}

/* Pop-in animation */
@keyframes popIn {
  0% {
    transform: scale(0.5);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.mcq-question {
  margin-top: calc(var(--vh) * -3);
  margin-bottom: calc(var(--vh) * -2);
}

.selection-content.mcq {
  margin-left: 1.75vw;
  width: 90vw;
  height: calc(var(--vh) * 5);
  justify-content: center;
}

.juzz-label.mcq {
  margin-left: 3.5vw;
  width: 86vw;
}

/* Hangman */
.base {
  position: absolute;
  left: 50%;                   /* Center horizontally */
  transform: translateX(-50%); /* Perfect centering */
  bottom: 0;
  width: 80%;
  height: calc(var(--vh) * 2);
  background: url('wood.jpg') no-repeat center center;
  background-size: cover; /* Ensures the image covers the entire background */
  opacity: 1;
}

.pole {
  position: absolute;
  bottom: calc(var(--vh) * 2);
  left: 6vw;
  width: calc(var(--vh) * 2);
  height: calc(var(--vh) * 75);
  background: url('wood.jpg') no-repeat center center;
  background-size: cover; /* Ensures the image covers the entire background */
  opacity: 1;
}

.beam {
  position: absolute;
  top: calc(var(--vh) * 2);
  left: 6vw;
  width: 19vw;
  height: calc(var(--vh) * 2);
  background: url('wood.jpg') no-repeat center center;
  background-size: cover; /* Ensures the image covers the entire background */
  opacity: 1;
}

.rope {
  position: absolute;
  top: calc(var(--vh) * 2);
  left: 50%;
  transform: translateX(-50%); /* Perfect centering */
  width: calc(var(--vh) * 2);
  height: calc(var(--vh) * 10);
  background: url('wood.jpg') no-repeat center center;
  background-size: cover; /* Ensures the image covers the entire background */
  opacity: 1;
}

/* Body parts */
.head {
  position: absolute;
  top: calc(var(--vh) * 11.4);
  left: 50%;
  transform: translateX(-50%); /* Perfect centering */
  width: calc(var(--vh) * 12);
  background-color: #f5deb3; /* Wheat skin tone */
  height: calc(var(--vh) * 12);
  border-radius: 50%;
  border: calc(var(--vh) * 0.5) solid black;
  z-index: 10;
}

.body {
  position: absolute;
  top: calc(var(--vh) * 23);
  left: 50%;
  transform: translateX(-50%); /* Perfect centering */
  width: calc(var(--vh) * 5);
  border-left: calc(var(--vh) * 5) solid transparent;   /* half of bottom width */
  border-right: calc(var(--vh) * 5) solid transparent;  /* same */
  border-bottom: calc(var(--vh) * 27) solid white;        /* thawb body */
  border-radius: calc(var(--vh) * 1);
  border-top: none;
  opacity: 1;
  z-index: 9;
}

.left-arm-upper {
  position: absolute;
  top: calc(var(--vh) * 23.7);
  left: calc(50% - calc(var(--vh) * 6.5)); /* adjust this distance from center */
  width: calc(var(--vh) * 2);
  height: calc(var(--vh) * 10);
  background: white;
  transform: rotate(50deg);
  transform-origin: left;
  border-radius: calc(var(--vh) * 0.4);
  opacity: 1;
}

.left-arm-lower {
  position: absolute;
  top: calc(var(--vh) * 31.3);
  left: calc(50% - calc(var(--vh) * 11.34)); /* adjust this distance from center */
  width: calc(var(--vh) * 2);
  height: calc(var(--vh) * 8);
  border-radius: calc(var(--vh) * 0.2);
  background: white;
  transform: rotate(20deg);
  transform-origin: left;
  opacity: 1;
}

.left-arm-hand {
  position: absolute;
  top: calc(var(--vh) * 38);
  left: calc(50% - calc(var(--vh) * 13)); /* adjust this distance from center */
  width: calc(var(--vh) * 2);
  height: calc(var(--vh) * 3);
  border-radius: calc(var(--vh) * 1);
  background: wheat;
  transform: rotate(20deg);
  transform-origin: left;
  border: calc(var(--vh) * 0.3) solid black;
  opacity: 1;
}

.right-arm-upper {
  position: absolute;
  top: calc(var(--vh) * 23.7);
  left: calc(50% + calc(var(--vh) * 4.5)); /* adjust this distance from center */
  width: calc(var(--vh) * 2);
  height: calc(var(--vh) * 10);
  background: white;
  transform: rotate(-50deg);  /* Inverted rotation for the opposite direction */
  transform-origin: right;
  border-radius: calc(var(--vh) * 0.4);
  opacity: 1;
}

.right-arm-lower {
  position: absolute;
  top: calc(var(--vh) * 31.3);
  left: calc(50% + calc(var(--vh) * 9.36)); /* adjust this distance from center */
  width: calc(var(--vh) * 2);
  height: calc(var(--vh) * 8);
  border-radius: calc(var(--vh) * 0.2);
  background: white;
  transform: rotate(-20deg);  /* Inverted rotation */
  transform-origin: right;
  opacity: 1;
}

.right-arm-hand {
  position: absolute;
  top: calc(var(--vh) * 38);
  left: calc(50% + calc(var(--vh) * 10.8)); /* adjust this distance from center */
  width: calc(var(--vh) * 2);
  height: calc(var(--vh) * 3);
  border-radius: calc(var(--vh) * 1);
  background: wheat;
  transform: rotate(-20deg);  /* Inverted rotation */
  transform-origin: right;
  border: calc(var(--vh) * 0.3) solid black;
  opacity: 1;
}


.left-shin {
  position: absolute;
  top: calc(var(--vh) * 49);
  left: calc(50% - calc(var(--vh) * 4.7)); /* adjust this distance from center */
  width: calc(var(--vh) * 2);
  height: calc(var(--vh) * 10);
  background: wheat;
  border: calc(var(--vh) * 0.3) solid black;
  opacity: 1;
}

.left-shoe {
  position: absolute;
  top: calc(var(--vh) * 57);
  left: calc(50% - calc(var(--vh) * 6)); /* adjust this distance from center */
  width: calc(var(--vh) * 5);
  height: calc(var(--vh) * 3);
  border-radius: calc(var(--vh) * 5);
  background: rgb(92, 61, 20);
  opacity: 1;
  z-index: 10;
}

.right-shin {
  position: absolute;
  top: calc(var(--vh) * 49);
  left: calc(50% + calc(var(--vh) * 2.5)); /* adjust this distance from center */
  width: calc(var(--vh) * 2);
  height: calc(var(--vh) * 10);
  background: wheat;
  border: calc(var(--vh) * 0.3) solid black;
  opacity: 1;
}

.right-shoe {
  position: absolute;
  top: calc(var(--vh) * 57);
  left: calc(50% + calc(var(--vh) * 1.3)); /* adjust this distance from center */
  width: calc(var(--vh) * 5);
  height: calc(var(--vh) * 3);
  border-radius: calc(var(--vh) * 5);
  background: rgb(92, 61, 20);
  opacity: 1;
  z-index: 10;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.hangman-part {
  animation: fadeIn 0.8s ease forwards;
}

.blanked {
  top: calc(var(--vh) * 6);
}

.score-table-container {
  display: flex;
  justify-content: center;
  margin-top: 0rem;
  margin-bottom: calc(var(--vh) * 4);
}

.score-table {
  font-size: calc(var(--vh) * 5); /* text-sm */
  border-collapse: collapse;
}

.score-table td {
  padding: 0.5rem 1rem;
  text-align: left;
}

.score-table .label {
  font-weight: bold;
  color: #777;
}

.score-table .value {
  color: #fff;
}

/* Slightly smaller height for phones */
@media screen and (orientation: portrait) {
  .card-container {
    grid-template-columns: 1fr; /* Single column on smaller screens */
    gap: 2vmax;
  }

  .card {
    height: calc(var(--vh) * 10); /* Smaller card height on narrow screens */
    font-size: 2vmax;
  }

  .popup {
    width: 80vw;
  }

  .selection-content {
    max-height: calc(var(--vh) * 75);
  }

  .key {
    height: calc(var(--vh) * 6); /* Slightly smaller key height for narrow screens */
    font-size: 3vmin;
  }

  .key.h {
    font-size: 2.2vmax;
  }

  .passage-container {
    position: fixed;
    width: 100vw;
    top: calc(var(--vh) * 20);
    height: calc(var(--vh) * 32.2);
    z-index: 3;
    background-color: rgba(255, 255, 255, 0.1); /* Semi-transparent white background */
  }

  .english-passage-container {
    position: fixed;
    width: 100vw;
    top: calc(var(--vh) * 20);
    height: calc(var(--vh) * 32.2);
    z-index: 3;
    background-color: rgba(255, 255, 255, 0.1); /* Semi-transparent white background */
  }

  .hangman-passage-container {
    position: fixed;
    width: 100vw;
    top: calc(var(--vh) * 25.2);
    height: calc(var(--vh) * 34.2);
    z-index: 3;
  }

  .type-container {
    width: 100vw;
    z-index: 2;
  }

  .suggestions-list {
    display: none;
  }

  .mobile-suggestions-list {
    visibility: visible;
    position: absolute;
    top: calc(var(--vh) * 18.8);
    margin: 0;
    z-index: 100;
    max-height: calc(var(--vh) * 32);
    width: 96%;
    margin-left: 2vw;
    list-style-type: none;
    font-family: "Scheherazade New";
    margin-top: calc(var(--vh) * 0.2);
    padding: 0;
    overflow-y: auto;
    left: 0;
    background-color: #fff;
    border: 0.2vmin solid #ddd;
    border-radius: 0.5vmax;
    box-shadow: 0 0.2vmax 0.4vmax rgba(0, 0, 0, 0.1);
  }
  
  .mobile-suggestions-list li {
    padding: calc(var(--vh) * 1.4);
    border-bottom: 0.3vmin solid #f0f0f0;
    font-family: "Scheherazade New";
    cursor: pointer;
    transition: background-color 0.3s ease;
    font-size: 0.9em;
    line-height: 1.5;
    color: #333;
  }
  
  .mobile-suggestions-list li:last-child {
    border-bottom: none;
    font-family: "Scheherazade New";
  }
  
  .mobile-suggestions-list li:hover {
    background-color: #f0f0f0;
    font-family: "Scheherazade New";
  }
  
  .mobile-suggestions-list li p {
    margin: 0;
    font-family: "Scheherazade New";
  }
  
  .mobile-suggestions-list.hidden {
    display: none;
    font-family: "Scheherazade New";
  }

  .search-container {
    width: 95%;
    padding-bottom: calc(var(--vh) * 0);
    z-index: 100;
  }

  .english-search-container {
    width: 95%;
    padding-bottom: calc(var(--vh) * 0);
    z-index: 100;
  }

  .search-container input {
    font-size: calc(var(--vh) * 2.6);
    height: calc(var(--vh) * 7);
    padding-right: 3vw;
    padding-left: 18vw;
  }

  .english-search-container input {
    font-size: calc(var(--vh) * 2.6);
    height: calc(var(--vh) * 7);
    padding-right: 18vw;
    padding-left: 18vw;
  }

  .keyboard-container {
    width: 100vw;
  }

  .english-keyboard-container {
    width: 100vw;
  }

  .key {
    max-width: 8vw;
  }

  .key.space {
    max-width: 23vw;
  }

  .Start-button {
    bottom: calc(var(--vh) * 4);
  }

  button.clear-button {
    left: 6vw; /* Position the button on the left side for RTL layout */
    top: calc(var(--vh) * 5.4); /* Vertically center the button */
    width: calc(var(--vh) * 4);
    height: calc(var(--vh) * 4);
  }

  button.english-clear-button {
    right: 6vw; /* Position the button on the left side for RTL layout */
    top: calc(var(--vh) * 4.7); /* Vertically center the button */
    width: calc(var(--vh) * 4);
    height: calc(var(--vh) * 4);
  }

  /* Mic Button Styling */
  .mic-button {
    left: 12vw; /* Position the button on the left side for RTL layout */
    top: calc(var(--vh) * 3.1); /* Vertically center the button */
    width: calc(var(--vh) * 4.7);
    height: calc(var(--vh) * 4.7);
  }

  .english-mic-button {
    right: 12vw; /* Position the button on the left side for RTL layout */
    top: calc(var(--vh) * 2.5); /* Vertically center the button */
    width: calc(var(--vh) * 4.7);
    height: calc(var(--vh) * 4.7);
  }

  .notification-container {
    width: 75vw;
    height: calc(var(--vh) * 2);
    font-size: 2vmin;
  }

  .score-table {
    font-size: 1rem;
  }

  .juzz-label.mcq {
    height: calc(var(--vh) * 10);
  }

  .blanked {
    top: calc(var(--vh) * 4);
  }

  /* Hangman */
  .pole {
    left: 12vw;
  }

  .beam {
    top: calc(var(--vh) * 0);
    left: 12vw;
    width: 40vw;
  }

  .rope {
    height: calc(var(--vh) * 2);
  }

  /* Body parts */
  .head {
    top: calc(var(--vh) * 3);
    width: calc(var(--vh) * 7);
    height: calc(var(--vh) * 7);
  }

  .body {
    top: calc(var(--vh) * 5);
    width: calc(var(--vh) * 2);
    border-left: calc(var(--vh) * 2) solid transparent;   /* half of bottom width */
    border-right: calc(var(--vh) * 2) solid transparent;  /* same */
    border-bottom: calc(var(--vh) * 19) solid white;        /* thawb body */
    border-radius: calc(var(--vh) * 1);
  }

  .left-arm-upper {
    top: calc(var(--vh) * 11);
    left: calc(50% - calc(var(--vh) * 3.6)); /* adjust this distance from center */
    width: calc(var(--vh) * 1);
    height: calc(var(--vh) * 5);
  }

  .left-arm-lower {
    position: absolute;
    top: calc(var(--vh) * 14.8);
    left: calc(50% - calc(var(--vh) * 6)); /* adjust this distance from center */
    width: calc(var(--vh) * 1);
    height: calc(var(--vh) * 4);
  }

  .left-arm-hand {
    top: calc(var(--vh) * 18);
    left: calc(50% - calc(var(--vh) * 7)); /* adjust this distance from center */
    width: calc(var(--vh) * 1);
    height: calc(var(--vh) * 1.5);
  }

  .right-arm-upper {
    top: calc(var(--vh) * 11);
    left: calc(50% + calc(var(--vh) * 2.6)); /* adjust this distance from center */
    width: calc(var(--vh) * 1);
    height: calc(var(--vh) * 5);
  }

  .right-arm-lower {
    position: absolute;
    top: calc(var(--vh) * 14.8);
    left: calc(50% + calc(var(--vh) * 5)); /* adjust this distance from center */
    width: calc(var(--vh) * 1);
    height: calc(var(--vh) * 4);
  }

  .right-arm-hand {
    top: calc(var(--vh) * 18);
    left: calc(50% + calc(var(--vh) * 5.6)); /* adjust this distance from center */
    width: calc(var(--vh) * 1);
    height: calc(var(--vh) * 1.5);
  }

  .left-shin {
    top: calc(var(--vh) * 21);
    left: calc(50% - calc(var(--vh) * 2.2)); /* adjust this distance from center */
    width: calc(var(--vh) * 1);
    height: calc(var(--vh) * 5);
  }

  .left-shoe {
    top: calc(var(--vh) * 26);
    left: calc(50% - calc(var(--vh) * 2.72)); /* adjust this distance from center */
    width: calc(var(--vh) * 2.5);
    height: calc(var(--vh) * 1.5);
  }

  .right-shin {
    top: calc(var(--vh) * 21);
    left: calc(50% + calc(var(--vh) * 0.8)); /* adjust this distance from center */
    width: calc(var(--vh) * 1);
    height: calc(var(--vh) * 5);
  }

  .right-shoe {
    top: calc(var(--vh) * 26);
    left: calc(50% + calc(var(--vh) * 0.33)); /* adjust this distance from center */
    width: calc(var(--vh) * 2.5);
    height: calc(var(--vh) * 1.5);
  }
}
